.container {
  width: 400px;
  height: 600px;
  display: grid;
  grid-template-rows: 1fr 2fr;
  border: 1px solid black;
  padding: 20px;
  border-radius: 5px;
  background-color: #4d8b31;
  box-shadow: 10px 0px 10px rgb(142, 142, 142);
}
.text-1 {
  font-size: large;
  font-size: x-large;
}
.new-item-form {
  display: grid;
  grid-template-rows: 1fr 1fr;
  height: 0%;
}
.form-row {
  display: flex;
  flex-direction: column;
}
input[type='text'] {
  border-radius: 10px;
  background-color: white;
  border: none;
  color: black;
  font-size: large;
}

button.delete {
  width: 25%;

  font-size: large;
  border-radius: 10px;
  position: relative;
}

button.add {
  width: 100%;

  font-size: large;
  border-radius: 10px;
  position: relative;
  top: 10px;
}
.add {
  background-color: #ff8427; /* Green */
  border: 1px solid #ff7810;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  cursor: pointer;
  float: left;
}

.add:not(:last-child) {
  border-right: none; /* Prevent double borders */
}

.add:hover {
  background-color: #ff7810;
}
li {
  list-style: none;
  display: flex;
  align-items: center;
  gap: 100px;
}

/* CSS */
.delete {
  background-color: red;
  border-radius: 8px;
  border-width: 0;
  color: #ffffff;
  cursor: pointer;
  display: inline-block;
  font-family: 'Haas Grot Text R Web', 'Helvetica Neue', Helvetica, Arial,
    sans-serif;
  font-size: 10px;
  font-weight: 400;
  line-height: 20px;
  list-style: none;
  margin: 0;
  padding: 10px 12px;
  text-align: center;
  transition: all 200ms;
  vertical-align: baseline;
  white-space: nowrap;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
}

@supports (-webkit-appearance: none) or (-moz-appearance: none) {
  .checkbox-wrapper-13 input[type='checkbox'] {
    --active: #275efe;
    --active-inner: #fff;
    --focus: 2px rgba(39, 94, 254, 0.3);
    --border: #bbc1e1;
    --border-hover: #275efe;
    --background: #fff;
    --disabled: #f6f8ff;
    --disabled-inner: #e1e6f9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 21px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
  }
  .checkbox-wrapper-13 input[type='checkbox']:after {
    content: '';
    display: block;
    left: 0;
    top: 0;
    position: absolute;
    transition: transform var(--d-t, 0.3s) var(--d-t-e, ease),
      opacity var(--d-o, 0.2s);
  }
  .checkbox-wrapper-13 input[type='checkbox']:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: 0.3s;
    --d-t: 0.6s;
    --d-t-e: cubic-bezier(0.2, 0.85, 0.32, 1.2);
  }
  .checkbox-wrapper-13 input[type='checkbox']:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: 0.9;
  }
  .checkbox-wrapper-13 input[type='checkbox']:disabled:checked {
    --b: var(--disabled-inner);
    --bc: var(--border);
  }
  .checkbox-wrapper-13 input[type='checkbox']:disabled + label {
    cursor: not-allowed;
  }
  .checkbox-wrapper-13
    input[type='checkbox']:hover:not(:checked):not(:disabled) {
    --bc: var(--border-hover);
  }
  .checkbox-wrapper-13 input[type='checkbox']:focus {
    box-shadow: 0 0 0 var(--focus);
  }
  .checkbox-wrapper-13 input[type='checkbox']:not(.switch) {
    width: 21px;
  }
  .checkbox-wrapper-13 input[type='checkbox']:not(.switch):after {
    opacity: var(--o, 0);
  }
  .checkbox-wrapper-13 input[type='checkbox']:not(.switch):checked {
    --o: 1;
  }
  .checkbox-wrapper-13 input[type='checkbox'] + label {
    display: inline-block;
    vertical-align: middle;
    cursor: pointer;
    margin-left: 4px;
  }

  .checkbox-wrapper-13 input[type='checkbox']:not(.switch) {
    border-radius: 7px;
  }
  .checkbox-wrapper-13 input[type='checkbox']:not(.switch):after {
    width: 5px;
    height: 9px;
    border: 2px solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: 7px;
    top: 4px;
    transform: rotate(var(--r, 20deg));
  }
  .checkbox-wrapper-13 input[type='checkbox']:not(.switch):checked {
    --r: 43deg;
  }
}

.checkbox-wrapper-13 * {
  box-sizing: inherit;
}
.checkbox-wrapper-13 *:before,
.checkbox-wrapper-13 *:after {
  box-sizing: inherit;
}
